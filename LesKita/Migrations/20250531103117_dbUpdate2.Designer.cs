// <auto-generated />
using System;
using LesKita;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LesKita.Migrations
{
    [DbContext(typeof(LesKitaDbContext))]
    [Migration("20250531103117_dbUpdate2")]
    partial class dbUpdate2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LesKita.Model.Rating.T2Rating", b =>
                {
                    b.Property<Guid>("IdRating")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Komentar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Skor")
                        .HasColumnType("int");

                    b.HasKey("IdRating");

                    b.HasIndex("IdOrder");

                    b.ToTable("T2Rating");
                });

            modelBuilder.Entity("LesKita.Model.T0Mentor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Alamat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("JenisKelamin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Nama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoTelepon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Rating")
                        .HasColumnType("float");

                    b.Property<DateTimeOffset?>("TanggalLahir")
                        .HasColumnType("datetimeoffset");

                    b.Property<double?>("Tarif")
                        .HasColumnType("float");

                    b.Property<int?>("Usia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("T0Mentor");
                });

            modelBuilder.Entity("LesKita.Model.T0Siswa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Alamat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Nama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoTelepon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("TanggalLahir")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("Usia")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("T0Siswa");
                });

            modelBuilder.Entity("LesKita.Model.T1JadwalMentor", b =>
                {
                    b.Property<Guid>("IdJadwalMentor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Hari")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdMentor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan?>("JamMulai")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("JamSelesai")
                        .HasColumnType("time");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdJadwalMentor");

                    b.HasIndex("IdMentor");

                    b.ToTable("T1JadwalMentor");
                });

            modelBuilder.Entity("LesKita.Model.T1Order", b =>
                {
                    b.Property<Guid>("IdOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Harga")
                        .HasColumnType("float");

                    b.Property<Guid?>("IdMentor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdSiswa")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdTransaksi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAktif")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDone")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<int?>("JumlahSesi")
                        .HasColumnType("int");

                    b.Property<string>("Mentor_Alamat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mentor_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mentor_Nama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mentor_NoTelepon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("Mentor_TanggalLahir")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("Mentor_Usia")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Siswa_Alamat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Siswa_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Siswa_Nama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Siswa_NoTelepon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("Siswa_TanggalLahir")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("Siswa_Usia")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("TanggalPemesanan")
                        .HasColumnType("datetimeoffset");

                    b.Property<double?>("Total")
                        .HasColumnType("float");

                    b.HasKey("IdOrder");

                    b.HasIndex("IdMentor");

                    b.HasIndex("IdSiswa");

                    b.ToTable("T1Order");
                });

            modelBuilder.Entity("LesKita.Model.T2Jadwal", b =>
                {
                    b.Property<Guid>("IdJadwal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Deskripsi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan?>("JamMulai")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("JamSelesai")
                        .HasColumnType("time");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("Tanggal")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("IdJadwal");

                    b.HasIndex("IdOrder");

                    b.ToTable("T2Jadwal");
                });

            modelBuilder.Entity("LesKita.Model.T2User", b =>
                {
                    b.Property<Guid>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Password")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("StatusNotifikasi")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("WaktuInsert")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("IdUser");

                    b.ToTable("T2User");
                });

            modelBuilder.Entity("LesKita.Model.T3Materi", b =>
                {
                    b.Property<Guid>("IdMateri")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Deskripsi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdJadwal")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UrlFile")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMateri");

                    b.HasIndex("IdJadwal");

                    b.ToTable("T3Materi");
                });

            modelBuilder.Entity("LesKita.Model.T6Pesan", b =>
                {
                    b.Property<Guid>("IdPesan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeskripsiGrup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconGrup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaGrup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("StatusGrup")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("WaktuCreate")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("IdPesan");

                    b.ToTable("T6Pesan");
                });

            modelBuilder.Entity("LesKita.Model.T7Pesan_Anggota", b =>
                {
                    b.Property<Guid>("IdDetilPesan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdPesan")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdUser_Anggota")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("StatusAdministrator")
                        .HasColumnType("bit");

                    b.Property<bool>("StatusArchive")
                        .HasColumnType("bit");

                    b.Property<bool>("StatusCreator")
                        .HasColumnType("bit");

                    b.Property<bool>("StatusMute")
                        .HasColumnType("bit");

                    b.Property<bool>("StatusPin")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("WaktuJoin")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("WaktuLeave")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("IdDetilPesan");

                    b.HasIndex("IdPesan");

                    b.HasIndex("IdUser_Anggota");

                    b.ToTable("T7Pesan_Anggota");
                });

            modelBuilder.Entity("LesKita.Model.T7Pesan_Percakapan", b =>
                {
                    b.Property<Guid>("IdDetilPesan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Durasi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdDetilPesan_Terkutip")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdPesan")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdUser_Pengirim")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IsiPesan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JenisAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkPreview_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkPreview_ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkPreview_Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkPreview_Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PesanTerkutip_Durasi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PesanTerkutip_IdUserPengirim")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PesanTerkutip_IsiPesan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("StatusDraft")
                        .HasColumnType("bit");

                    b.Property<bool>("StatusPin")
                        .HasColumnType("bit");

                    b.Property<bool>("StatusStar")
                        .HasColumnType("bit");

                    b.Property<bool>("StatusSystem")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("WaktuInsert")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("WaktuSend")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("IdDetilPesan");

                    b.HasIndex("IdPesan");

                    b.HasIndex("IdUser_Pengirim");

                    b.ToTable("T7Pesan_Percakapan");
                });

            modelBuilder.Entity("LesKita.Model.T8Pesan_Terima", b =>
                {
                    b.Property<Guid>("IdDetilDetilPesan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdDetilPesan")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdUser_Penerima")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("StatusDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("WaktuDelivered")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("WaktuRead")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("IdDetilDetilPesan");

                    b.HasIndex("IdDetilPesan");

                    b.HasIndex("IdUser_Penerima");

                    b.ToTable("T8Pesan_Terima");
                });

            modelBuilder.Entity("LesKita.Model.T9Notifikasi", b =>
                {
                    b.Property<Guid>("IdNotifikasi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Form")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdUser_Penerima")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdUser_Pengirim")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("IsiPesan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JenisPesan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NilaiPK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("StatusSistem")
                        .HasColumnType("bit");

                    b.Property<string>("UserPenerima_NamaPanggilan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPengirim_NamaPanggilan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("WaktuProsesData")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("WaktuProsesNotifikasi")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("IdNotifikasi");

                    b.ToTable("T9Notifikasi");
                });

            modelBuilder.Entity("LesKita.Model.Rating.T2Rating", b =>
                {
                    b.HasOne("LesKita.Model.T1Order", "T1Order")
                        .WithMany()
                        .HasForeignKey("IdOrder");

                    b.Navigation("T1Order");
                });

            modelBuilder.Entity("LesKita.Model.T1JadwalMentor", b =>
                {
                    b.HasOne("LesKita.Model.T0Mentor", "T0Mentor")
                        .WithMany("ListT1JadwalMentor")
                        .HasForeignKey("IdMentor");

                    b.Navigation("T0Mentor");
                });

            modelBuilder.Entity("LesKita.Model.T1Order", b =>
                {
                    b.HasOne("LesKita.Model.T0Mentor", "T0Mentor")
                        .WithMany("ListT1Order")
                        .HasForeignKey("IdMentor");

                    b.HasOne("LesKita.Model.T0Siswa", "T0Siswa")
                        .WithMany("ListT1Order")
                        .HasForeignKey("IdSiswa");

                    b.Navigation("T0Mentor");

                    b.Navigation("T0Siswa");
                });

            modelBuilder.Entity("LesKita.Model.T2Jadwal", b =>
                {
                    b.HasOne("LesKita.Model.T1Order", "T1Order")
                        .WithMany("ListT2Jadwal")
                        .HasForeignKey("IdOrder");

                    b.Navigation("T1Order");
                });

            modelBuilder.Entity("LesKita.Model.T3Materi", b =>
                {
                    b.HasOne("LesKita.Model.T2Jadwal", "T2Jadwal")
                        .WithMany("ListT3Materi")
                        .HasForeignKey("IdJadwal");

                    b.Navigation("T2Jadwal");
                });

            modelBuilder.Entity("LesKita.Model.T7Pesan_Anggota", b =>
                {
                    b.HasOne("LesKita.Model.T6Pesan", "T6Pesan")
                        .WithMany("ListT7Pesan_Anggota")
                        .HasForeignKey("IdPesan");

                    b.HasOne("LesKita.Model.T2User", "T2User")
                        .WithMany()
                        .HasForeignKey("IdUser_Anggota");

                    b.Navigation("T2User");

                    b.Navigation("T6Pesan");
                });

            modelBuilder.Entity("LesKita.Model.T7Pesan_Percakapan", b =>
                {
                    b.HasOne("LesKita.Model.T6Pesan", "T6Pesan")
                        .WithMany("ListT7Pesan_Percakapan")
                        .HasForeignKey("IdPesan");

                    b.HasOne("LesKita.Model.T2User", "T2User")
                        .WithMany()
                        .HasForeignKey("IdUser_Pengirim");

                    b.Navigation("T2User");

                    b.Navigation("T6Pesan");
                });

            modelBuilder.Entity("LesKita.Model.T8Pesan_Terima", b =>
                {
                    b.HasOne("LesKita.Model.T7Pesan_Percakapan", "T7Pesan_Percakapan")
                        .WithMany("ListT8Pesan_Terima")
                        .HasForeignKey("IdDetilPesan");

                    b.HasOne("LesKita.Model.T2User", "T2User")
                        .WithMany()
                        .HasForeignKey("IdUser_Penerima");

                    b.Navigation("T2User");

                    b.Navigation("T7Pesan_Percakapan");
                });

            modelBuilder.Entity("LesKita.Model.T0Mentor", b =>
                {
                    b.Navigation("ListT1JadwalMentor");

                    b.Navigation("ListT1Order");
                });

            modelBuilder.Entity("LesKita.Model.T0Siswa", b =>
                {
                    b.Navigation("ListT1Order");
                });

            modelBuilder.Entity("LesKita.Model.T1Order", b =>
                {
                    b.Navigation("ListT2Jadwal");
                });

            modelBuilder.Entity("LesKita.Model.T2Jadwal", b =>
                {
                    b.Navigation("ListT3Materi");
                });

            modelBuilder.Entity("LesKita.Model.T6Pesan", b =>
                {
                    b.Navigation("ListT7Pesan_Anggota");

                    b.Navigation("ListT7Pesan_Percakapan");
                });

            modelBuilder.Entity("LesKita.Model.T7Pesan_Percakapan", b =>
                {
                    b.Navigation("ListT8Pesan_Terima");
                });
#pragma warning restore 612, 618
        }
    }
}
